<?php

namespace Test\AbraFlexi\ui\TWB5;

use AbraFlexi\ui\TWB5\CompanyLogo;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2025-06-26 at 09:26:10.
 */
class CompanyLogoTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var CompanyLogo
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new CompanyLogo();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    public function testConstructorSetsDefaultProperties()
    {
        $logo = new CompanyLogo();
        $reflection = new \ReflectionClass($logo);
        $srcProperty = $reflection->getParentClass()->getProperty('src');
        $srcProperty->setAccessible(true);
        $src = $srcProperty->getValue($logo);
        $this->assertNotEmpty($src, 'Logo src should not be empty');
        $this->assertStringContainsString('data:image', $src, 'Logo src should be a data URI');
    }

    public function testConstructorAcceptsTagProperties()
    {
        $props = ['class' => 'company-logo', 'id' => 'companylogo'];
        $logo = new CompanyLogo($props);
        $reflection = new \ReflectionClass($logo);
        $propsProperty = $reflection->getParentClass()->getProperty('properties');
        $propsProperty->setAccessible(true);
        $actualProps = $propsProperty->getValue($logo);
        $this->assertArrayHasKey('class', $actualProps);
        $this->assertEquals('company-logo', $actualProps['class']);
        $this->assertArrayHasKey('id', $actualProps);
        $this->assertEquals('companylogo', $actualProps['id']);
    }
}
