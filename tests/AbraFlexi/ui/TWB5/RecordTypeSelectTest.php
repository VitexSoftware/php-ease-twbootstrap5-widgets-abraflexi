<?php

namespace Test\AbraFlexi\ui\TWB5;

use AbraFlexi\ui\TWB5\RecordTypeSelect;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2025-06-26 at 09:26:11.
 */
class RecordTypeSelectTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var RecordTypeSelect
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new RecordTypeSelect();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    public function testSelectOptionsAreGeneratedCorrectly()
    {
        $mockEngine = $this->createMock(\AbraFlexi\RO::class);
        $mockEngine->expects($this->once())
            ->method('getColumnsFromAbraFlexi')
            ->with(['nazev', 'id'], ['order' => 'nazev'])
            ->willReturn([
                ['id' => 1, 'nazev' => 'Type A'],
                ['id' => 2, 'nazev' => 'Type B'],
            ]);
        $mockEngine->expects($this->once())
            ->method('getDataValue')
            ->with('id')
            ->willReturn(2);
        $mockEngine->expects($this->once())
            ->method('getEvidence')
            ->willReturn('typSklPoh');

        $select = new RecordTypeSelect($mockEngine);
        $reflection = new \ReflectionClass($select);
        $optionsProperty = $reflection->getParentClass()->getProperty('options');
        $optionsProperty->setAccessible(true);
        $options = $optionsProperty->getValue($select);
        $this->assertArrayHasKey('', $options);
        $this->assertArrayHasKey(1, $options);
        $this->assertArrayHasKey(2, $options);
        $this->assertEquals('Type A', $options[1]);
        $this->assertEquals('Type B', $options[2]);
    }
}
