<?php

namespace Test\AbraFlexi\ui\TWB5;

use AbraFlexi\ui\TWB5\ConnectionForm;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2025-06-26 at 09:26:10.
 */
class ConnectionFormTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var ConnectionForm
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new ConnectionForm();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    public function testFormFieldsAreSetCorrectly()
    {
        $options = [
            'url' => 'https://demo.abraflexi.eu:5434',
            'user' => 'testuser',
            'password' => 'testpass',
            'company' => 'testcompany',
        ];
        $form = new ConnectionForm($options);
        $this->assertEquals('url', $form->urlField);
        $this->assertEquals('user', $form->usernameField);
        $this->assertEquals('password', $form->passwordField);
        $this->assertEquals('company', $form->companyField);
    }

    public function testFormAcceptsProperties()
    {
        $options = [];
        $formProps = ['id' => 'connform', 'class' => 'form-class'];
        $form = new ConnectionForm($options, $formProps);
        $reflection = new \ReflectionClass($form);
        $propsProperty = $reflection->getParentClass()->getProperty('properties');
        $propsProperty->setAccessible(true);
        $actualProps = $propsProperty->getValue($form);
        $this->assertArrayHasKey('id', $actualProps);
        $this->assertEquals('connform', $actualProps['id']);
        $this->assertArrayHasKey('class', $actualProps);
        $this->assertEquals('form-class', $actualProps['class']);
    }
}
